"use client";

import { useState, useTransition } from "react";
import { toast } from "sonner";
import {
  useAccount,
  useWaitForTransactionReceipt,
  useWriteContract,
} from "wagmi";
import { contracts } from "@/lib/contracts";
import { Button } from "@/components/ui/button";
import { Loader2, CheckCircle2 } from "lucide-react";

export function ClaimSBTButton({ onSuccess }: { onSuccess?: () => void }) {
  const { address } = useAccount();
  const [hash, setHash] = useState<`0x${string}` | undefined>(undefined);
  const { writeContractAsync } = useWriteContract();
  const { isLoading, isSuccess } = useWaitForTransactionReceipt({ hash });

  const [pending, startTransition] = useTransition();

  async function handleClaim() {
    if (!address) return;

    startTransition(async () => {
      try {
        const txHash = await writeContractAsync({
          address: contracts.institution.address,
          abi: contracts.institution.abi,
          functionName: "claim",
          args: [],
        });

        toast.success("Berhasil mengirim transaksi klaim!");
        setHash(txHash);
        onSuccess?.(); // âœ… Trigger refresh/status update
      } catch (err) {
        console.error(err);
        toast.error("Gagal klaim token.");
      }
    });
  }

  return (
    <div className="mt-4">
      <Button
        onClick={handleClaim}
        disabled={pending || isLoading || isSuccess}
        className="w-full"
      >
        {pending || isLoading ? (
          <>
            <Loader2 className="w-4 h-4 mr-2 animate-spin" />
            Mengklaim SBT...
          </>
        ) : isSuccess ? (
          <>
            <CheckCircle2 className="w-4 h-4 mr-2 text-green-500" />
            SBT berhasil diklaim!
          </>
        ) : (
          "Claim SBT Sekarang"
        )}
      </Button>
    </div>
  );
}
